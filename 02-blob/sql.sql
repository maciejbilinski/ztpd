-- 1
CREATE TABLE MOVIES AS SELECT * FROM ZTPD.MOVIES;

-- 2
DESC MOVIES;
SELECT * FROM MOVIES;

-- 3
SELECT ID, TITLE FROM MOVIES WHERE COVER IS NULL;

-- 4
SELECT ID, TITLE, DBMS_LOB.GETLENGTH(COVER) FILESIZE FROM MOVIES WHERE COVER IS NOT NULL;

-- 5
SELECT ID, TITLE, DBMS_LOB.GETLENGTH(COVER) FILESIZE FROM MOVIES WHERE COVER IS NULL;
-- ZOSTANIE ZWRÃ“CONE NULL W KOLUMNIE FILESIZE

-- 6
SELECT DIRECTORY_NAME, DIRECTORY_PATH FROM ALL_DIRECTORIES;

-- 7
UPDATE MOVIES SET COVER = EMPTY_BLOB(), MIME_TYPE = 'image/jpeg' WHERE ID = 66;

-- 8
SELECT ID, TITLE, DBMS_LOB.GETLENGTH(COVER) FILESIZE FROM MOVIES WHERE ID IN (65, 66);

-- 9
DECLARE
    V_IMG BFILE := BFILENAME('TPD_DIR', 'escape.jpg');
    V_BLOB BLOB;
BEGIN
    SELECT COVER INTO V_BLOB FROM MOVIES WHERE ID = 66 FOR UPDATE;
    DBMS_LOB.FILEOPEN(V_IMG, DBMS_LOB.FILE_READONLY);
    DBMS_LOB.LOADFROMFILE(V_BLOB, V_IMG, DBMS_LOB.GETLENGTH(V_IMG));
    DBMS_LOB.FILECLOSE(V_IMG);
    COMMIT;
END;
SELECT ID, TITLE, DBMS_LOB.GETLENGTH(COVER) FILESIZE FROM MOVIES WHERE ID = 66;

-- 10
CREATE TABLE TEMP_COVERS (
    MOVIE_ID NUMBER(12),
    IMAGE BFILE,
    MIME_TYPE VARCHAR2(50)
);

-- 11
INSERT INTO TEMP_COVERS VALUES (65, BFILENAME('TPD_DIR', 'eagles.jpg'), 'image/jpeg');

-- 12
SELECT MOVIE_ID, DBMS_LOB.GETLENGTH(IMAGE) FILESIZE FROM TEMP_COVERS;

-- 13
DECLARE
    V_IMAGE BFILE;
    V_MIME_TYPE VARCHAR2(50);
    V_BLOB BLOB;
BEGIN
    SELECT IMAGE, MIME_TYPE INTO V_IMAGE, V_MIME_TYPE FROM TEMP_COVERS WHERE MOVIE_ID = 65;
    DBMS_LOB.CREATETEMPORARY(V_BLOB, TRUE);
    DBMS_LOB.FILEOPEN(V_IMAGE, DBMS_LOB.FILE_READONLY);
    DBMS_LOB.LOADFROMFILE(V_BLOB, V_IMAGE, DBMS_LOB.GETLENGTH(V_IMAGE));
    DBMS_LOB.FILECLOSE(V_IMAGE);
    UPDATE MOVIES SET COVER = V_BLOB, MIME_TYPE = V_MIME_TYPE WHERE ID = 65;
    DBMS_LOB.FREETEMPORARY(V_BLOB);
    COMMIT;
END;

-- 14
SELECT ID MOVIE_ID, TITLE, DBMS_LOB.GETLENGTH(COVER) FILESIZE FROM MOVIES WHERE ID IN (65, 66);

-- 15
DROP TABLE MOVIES;